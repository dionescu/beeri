// Generated by Bisonc++ V4.01.00 on Tue, 16 Jul 2013 17:20:47 +0300

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "util/plang/plang_parser_base.h"
// $insert scanner.h
#include "util/plang/plang_scanner.h"


#undef Parser
namespace plang {

class Parser: public ParserBase
{
    // $insert scannerobject
    Scanner d_scanner;

    public:
        std::unique_ptr<Expr> res_val;
        int parse();
        bool eval(const ::google::protobuf::Message& msg);

        Parser(std::istream &in, std::ostream &out) : d_scanner(in, out) {}

    private:
        void error(char const *msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner.
        void print();                   // use, e.g., d_token, d_loc

    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
};

}  // namespace plang


#endif
